paths:
  /api/user/{id}:
    get:
      tags:
        - 유저
      summary: 유저를 가져옵니다.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: 4c39892e-a6f5-41b3-a425-2499cbc2c010
          required: true
          description: 유저 아이디
      responses:
        '200':
          description: 유저 정보를 보여줍니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 존재하지 않는 유저입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - 유저
      summary: 유저를 수정합니다
      description: >
        유저를 수정합니다. <br>
        주어진 id의 유저 정보를 수정합니다.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: 유저 아이디
      requestBody:
        description: 유저 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: 유저 정보가 변경되었습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 존재하지 않는 유저입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - 유저
      summary: 유저를 삭제합니다.
      description: >
        유저를 삭제합니다. <br>
        주어진 id의 유저를 삭제합니다.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          example: abc
          required: true
          description: 유저 아이디
      responses:
        '200':
          description: 유저 아이디가 삭제 되었습니다.
        '404':
          description: 존재하지 않는 유저입니다.

  /api/user:
    post:
      tags:
        - 유저
      summary: 유저를 만듭니다.
      description: >
        새로운 유저를 만듭니다.
      requestBody:
        description: 유저 정보
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
            example:
              name: ycha
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: 4c39892e-a6f5-41b3-a425-2499cbc2c010
                name: ycha

components:
  schemas:
    User:
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: 유저 아이디
        name:
          type: string
          description: 유저 이름
        created_at:
          type: string
          description: 유저 생성 시간
        updated_at:
          type: string
          description: 최근 유저 정보 수정 시간
    UserInput:
      required:
        - name
      properties:
        name:
          type: string
          description: 유저 이름